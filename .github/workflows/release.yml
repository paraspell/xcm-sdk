on:
  push:
    branches:
      - main

name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          release-type: node
          changelog-types: >
            [
            { "type": "feat", "section": "Features", "hidden": false },
            { "type": "fix", "section": "Bug Fixes", "hidden": false },
            { "type": "perf", "section": "Performance Improvements", "hidden": false },
            { "type": "revert", "section": "Reverts", "hidden": false },
            { "type": "docs", "section": "Documentation", "hidden": false },
            { "type": "style", "section": "Styles", "hidden": false },
            { "type": "chore", "section": "Miscellaneous Chores", "hidden": false },
            { "type": "refactor", "section": "Code Refactoring", "hidden": false },
            { "type": "test", "section": "Tests", "hidden": false },
            { "type": "build", "section": "Build System", "hidden": false },
            { "type": "ci", "section": "Continuous Integration", "hidden": false }
            ]
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v4
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}
      - uses: pnpm/action-setup@v2
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm install
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm compile
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm format:check
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm lint:check
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm test
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm build
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}
      - run: pnpm publish --no-git-checks --access=public
        if: ${{ steps.release.outputs.release_created }}
